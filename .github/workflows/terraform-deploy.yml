name: Terraform deploy

on:
  workflow_call:
    inputs:
      backend-config:
        description: 'The backend config file'
        required: true
        type: string
      only-plan:
        description: 'Set to true to only plan a deployment'
        default: false
        required: false
        type: boolean
      project:
        description: 'The GCP project'
        required: true
        type: string
    secrets:
      gcp-credentials:
        description: 'The GCP service account credentials'
        required: true
      env-config:
        description: 'The environment config'
        required: true

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.gcp-credentials }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist
      - uses: hashicorp/setup-terraform@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'
      - run: pip install google-cloud-storage
      - name: Create environment
        run: cd infrastructure && echo '${{ secrets.env-config }}' >> main.tfvars
      - name: terraform init
        run: cd infrastructure && terraform init -backend-config=${{ inputs.backend-config }}
      - name: terraform fmt
        run: cd infrastructure && terraform fmt -check
      - name: terraform plan
        run: cd infrastructure && terraform plan -var-file='main.tfvars'
      - if: ${{ !inputs.only-plan }}
        name: terraform apply
        run: cd infrastructure && terraform apply -var-file='main.tfvars' -auto-approve
      - if: ${{ !inputs.only-plan }}
        name: Create GCP credentials
        run: jq -n '${{ secrets.gcp-credentials }}' > keyfile.json
      - if: ${{ !inputs.only-plan }}
        uses: appex-org/ci-workflows/.github/actions/execute-script@main
        with: 
          name: deploy_clean_up
          params: ${{ inputs.project }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: keyfile.json
